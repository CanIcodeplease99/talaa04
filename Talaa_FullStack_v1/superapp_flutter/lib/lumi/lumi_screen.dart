import 'dart:convert'; import 'package:flutter/material.dart'; import 'package:http/http.dart' as http; import 'widgets/bubbles.dart'; import 'widgets/action_cards.dart'; class LumiScreen extends StatefulWidget{ final String apiBase; const LumiScreen({super.key, required this.apiBase}); @override State<LumiScreen> createState()=>_LumiState(); } class _LumiState extends State<LumiScreen>{ final controller=TextEditingController(); final List<Widget> messages=[]; Future<void> send() async{ final text=controller.text.trim(); if(text.isEmpty) return; setState(()=>messages.add(UserBubble(text: text))); controller.clear(); final r=await http.post(Uri.parse("${widget.apiBase}/v1/lumi/chat"), headers:{"Content-Type":"application/json"}, body: jsonEncode({"message": text})); if(r.statusCode!=200){ setState(()=>messages.add(const LumiBubble(child: Text("Sorry, I had trouble.")))); return; } final data=jsonDecode(r.body); final reply=data["reply"]; if(reply["type"]=="text"){ setState(()=>messages.add(LumiBubble(child: Text(reply["content"])))); } else if(reply["type"]=="tool"){ final name=reply["name"]; final res=reply["result"]; if(name=="fx_quote"){ final q=res["data"]; setState(()=>messages.add(LumiBubble(child: FxQuoteCard(rate:(q["rate"] as num).toDouble(), fee:(q["fee"] as num).toDouble(), received:(q["received"] as num).toDouble())))); } else if(name=="rail_status"){ final items=List<Map<String,dynamic>>.from(res["data"]); setState(()=>messages.add(LumiBubble(child: RailStatusCard(items: items)))); } else { setState(()=>messages.add(LumiBubble(child: Text("Done: $name")))); } } } @override Widget build(BuildContext c){ return Scaffold(appBar: AppBar(title: const Text('Lumi')), body: Column(children:[ Expanded(child: ListView(padding: const EdgeInsets.all(12), children: messages)), Padding(padding: const EdgeInsets.all(8), child: Row(children:[ Expanded(child: TextField(controller: controller, decoration: const InputDecoration(hintText:'Ask Lumiâ€¦'))), IconButton(onPressed: send, icon: const Icon(Icons.send)) ])) ])); }}
